gm_nona <- gm_raw
gm_nona <- gm_raw %>% fill(population)
#beflore fixing missing population
aggr_plot <- aggr(gm_raw, col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(gm_raw), cex.axis=.7, gap=3, ylab=c("Histogram of missing data","Pattern"))
#after fixing the missing population
aggr_plot_1 <- aggr(gm_nona, col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(gm_raw), cex.axis=.7, gap=3, ylab=c("Histogram of missing data","Pattern"))
#There are some NA values in income.
income_na <- gm_nona[is.na(gm_nona$income),]
#How many countries are missing income values per region
regionwise_na <- income_na%>%group_by(region)%>%count(Country)%>%count(region)
regionwise_na$miss <- regionwise_na$n
regionwise_na$n <- NULL
regionwise_nona <- gm_nona %>% group_by(region) %>% count(Country) %>% count(region)
regionwise_nona$total <- regionwise_nona$n
regionwise_nona$n <- NULL
regionwise_summary <- left_join(regionwise_nona,regionwise_na)
regionwise_summary <- regionwise_summary %>% mutate(miss = replace_na(miss,0)) %>% mutate(percentage_na = (miss*100/total)) %>% mutate(percentage_na = round(percentage_na, digits = 2))
regionwise_summary
country_all <- gm_nona %>% group_by(region) %>% count(Country)
country_all$region <- NULL
country_na <- income_na%>%group_by(region)%>%count(Country)
country_na$region <- NULL
country_na$miss <- country_na$n
country_summary <- left_join(country_all, country_na)
country_summary <- country_summary[!(is.na(country_summary$miss)),]
r min(gm_raw$Year)
` r min(gm_raw$Year)`
min(gm_raw$Year)
min(gm_raw$Year)
country_summary <- left_join(country_all, country_na)
country_summary
country_summary <- country_summary[!(is.na(country_summary$miss)),]
country_summary
country_summary <- country_summary[!(is.na(country_summary$miss)),]
yearwise_regional_income <- gm_nona %>% group_by(region,Year) %>% summarise(avg_income = mean(income, na.rm = TRUE))
country_summary <- left_join(country_all, country_na)
country_summary
sum(!(is.na(country_summary$miss)))
country_summary_na <- country_summary[!(is.na(country_summary$miss)),] #remoces all the non-miss values
max(gm_nona$population)
View(gm_nona)
max(gm_nona[Year==2015,4])
max(gm_nona[gm_nona$Year==2015,4])
gm_nona[gm_nona$population==1376048943,1]
gm_nona[gm_nona$population==max(gm_nona[gm_nona$Year==2015,4]),1]
gm_nona[gm_nona$population==max(gm_nona[gm_nona$Year==2015,4]),6]
unique(gm_nona[gm_nona$population==max(gm_nona[gm_nona$Year==2015,4]),6])
gm_nona[gm_nona$population==min(gm_nona[gm_nona$Year==2015,4]),6]
gm_nona[gm_nona$population==min(gm_nona[gm_nona$Year==2015,4]),1]
gm_nona[gm_nona$population==min(gm_nona[gm_nona$Year==2015,4]),6]
gm_nona[gm_nona$population==max(gm_nona[gm_nona$Year==2015,4]),1]
gm_nona[gm_nona$population==max(gm_nona[gm_nona$Year==2015,4]),6]
gm_nona[gm_nona$life==min(gm_nona$life),3]
gm_nona[gm_nona$life==min(gm_nona$life),3]
gm_nona[gm_nona$life==max(gm_nona$life),3]
gm_nona[gm_nona$life==max(gm_nona$life),2]
gm_nona[gm_nona$life==max(gm_nona$life),1]
summary(gm_nona$population)
regionwise_summary
View(regionwise_summary)
regionwise_summary[regionwise_summary$total==max(regionwise_summary$total),1]
regionwise_summary[regionwise_summary$total==min(regionwise_summary$total),1]
View(gm_raw)
summary(gm_nona$income)
summary(gm_nona[gm_nona$Year==2015,5])
gm_nona[gm_nona$Year==2015,5]
max(gm_nona[gm_nona$Year==2015,5])
gm_nona[gm_nona$Year==max(gm_nona[gm_nona$Year==2015,5]),5]
gm_nona[gm_nona$Year==max(gm_nona[gm_nona$Year==2015,5]),1]
max(gm_nona[gm_nona$Year==2015,5])
gm_nona[gm_nona$income==max(gm_nona$income),1]
View(gm_nona)
max(gm_nona$income)
gm_nona[gm_nona$income==max(gm_nona$income,na.rm = TRUE),1]
max(gm_nona$income,na.rm = TRUE)
max(gm_nona[gm_nona$Year==2015,5],na.rm = TRUE)
max(gm_nona[Year==2015]$income,na.rm = TRUE)
max(gm_nona[gm_nona$Year==2015]$income,na.rm = TRUE)
max(gm_nona[gm_nona$Year==2015,5],na.rm = TRUE)
min(gm_nona[gm_nona$Year==2015,5],na.rm = TRUE)
gm_nona %>% group_by(region)%>% mutate(Total_pop = sum(population))
gm_nona %>% group_by(region)%>% summarise(Total_pop = sum(population))
gm_nona %>% group_by(region)%>% summarise(Total_population = sum(population))
gm_nona %>% group_by(region,year())%>% summarise(Total_population = sum(population))
gm_nona %>% group_by(region,Year)%>% summarise(Total_population = sum(population))
summary(gm_nona)
mean(gm_nona[gm_nona$Year==2015,3])
mean(gm_nona[gm_nona$Year==2015,3])
View(regionwise_summary)
View(regionwise_summary)
gm_prepd <- gm_nona
gm_prepd <- log(gm_prepd$population)
sum(is.na(gm_nona$income))
gm_prepd <- gm_nona
gm_prepd <- gm_nona
gm_prepd$population <- log(gm_prepd$population)
gm_prepd$income <- log(gm_prepd$income)
gm_prepd <- gm_nona
gm_prepd$population <- log(gm_prepd$population)
gm_prepd$income <- log(gm_prepd$income)
ggplot(gm_nona, aes(x = region, y = life))  + geom_boxplot(outlier.colour = "red") +
geom_jitter(position = position_jitter(width = 0.1, height = 0), alpha = 1/4) + labs(title="Life expectacy trending over region", x="Region", y="Life")
ggplot(gm_nona, aes(x = region, y = population))  + geom_boxplot(outlier.colour = "red") +
geom_jitter(position = position_jitter(width = 0.1, height = 0), alpha = 1/4) + labs(title="Population trending over region", x="Region", y="population")
par(mfrow=c(1,2))
ggplot(gm_nona, aes(x = region, y = life))  + geom_boxplot(outlier.colour = "red") +
geom_jitter(position = position_jitter(width = 0.1, height = 0), alpha = 1/4) + labs(title="Life Expectancy trending over region", x="Region", y="Life")
ggplot(gm_nona, aes(x = region, y = population))  + geom_boxplot(outlier.colour = "red") +
geom_jitter(position = position_jitter(width = 0.1, height = 0), alpha = 1/4) + labs(title="Population trending over region", x="Region", y="population")
library(tidyverse)
library(mice)
library(VIM)
library(cluster)
library(factoextra)
gm_prepd_omited <- gm_prepd
gm_prepd_omited <- na.omit(gm_prepd_omited)
gm_prepd_omited <- scale(gm_prepd_omited)
gm_prepd_omited[2:6] <- scale(gm_prepd_omited[2:6])
gm_prepd_omited[2:5] <- scale(gm_prepd_omited[2:5])
df <- USArrests
str(df)
rm(df)
summary(df)
gm_kmean_sub <- gm_prepd_omited[2:5]
gm_prepd_omited <- gm_prepd
gm_prepd_omited <- na.omit(gm_prepd_omited)
gm_prepd_omited[2:5] <- scale(gm_prepd_omited[2:5])
gm_kmean_sub <- gm_prepd_omited[2:5] #creating a subset with numeric values only
#Calculating the Optimal number of clusters
set.seed(123)
fviz_nbclust(gm_kmean_sub, kmeans, method = "wss")
gm_prepd_omited <- gm_prepd[gm_prepd$Year==2015]
gm_prepd_omited <- gm_prepd[gm_prepd$Year==2015,]
# filtering year 2015
gm_prepd_omited <- gm_prepd[gm_prepd$Year==2015,]
# Omiting NA and Scaling
gm_prepd_omited <- na.omit(gm_prepd_omited)
gm_prepd_omited[2:5] <- scale(gm_prepd_omited[2:5])
#creating a subset with numeric values only
gm_kmean_sub <- gm_prepd_omited[2:5]
#Calculating the Optimal number of clusters
set.seed(123)
fviz_nbclust(gm_kmean_sub, kmeans, method = "wss")
str(gm_kmean_sub)
# filtering year 2015
gm_prepd_omited <- gm_prepd[gm_prepd$Year==2015,]
str(gm_prepd_omited)
str(gm_prepd_omited)
# filtering year 2015
gm_prepd_omited <- gm_prepd[gm_prepd$Year==2015,]
# Omiting NA and Scaling
gm_prepd_omited <- na.omit(gm_prepd_omited)
gm_prepd_omited[3:5] <- scale(gm_prepd_omited[3:5])
#creating a subset with numeric values only
gm_kmean_sub <- gm_prepd_omited[3:5]
set.seed(123)
fviz_nbclust(gm_kmean_sub, kmeans, method = "wss")
fviz_nbclust(gm_kmean_sub, kmeans, method = "silhouette")
fviz_gap_stat(gm_kmean_sub)
gap_stat <- clusGap(gm_kmean_sub, FUN = kmeans, nstart = 25,K.max = 10, B = 50)
gap_stat <- clusGap(gm_kmean_sub, FUN = kmeans, nstart = 25,K.max = 10, B = 50)
fviz_gap_stat(gap_stat)
set.seed(123)
fviz_nbclust(gm_kmean_sub, kmeans, method = "silhouette")
k_cluster <- kmeans(gm_kmean_sub, centers = 2, nstart = 25)
view(k_cluster)
print(k_cluster)
# adding cluster back to the dataset
gm_kmean_final <- gm_prepd_omited %>% mutate(Cluster = k_cluster$cluster)
fviz_cluster(k_cluster, data = gm_kmean_final)
view(gm_kmean_final)
# filtering year 2015
gm_prepd_omited <- gm_prepd[gm_prepd$Year==2015,]
# Omiting NA and Scaling
gm_prepd_omited <- na.omit(gm_prepd_omited)
gm_prepd_scaled[3:5] <- scale(gm_prepd_omited[3:5])
# filtering year 2015
gm_prepd_omited <- gm_prepd[gm_prepd$Year==2015,]
# Omiting NA and Scaling
gm_prepd_omited <- na.omit(gm_prepd_omited)
gm_prepd_scaled <- gm_prepd_omited
gm_prepd_scaled[3:5] <- scale(gm_prepd_omited[3:5])
# creating a subset with numeric values only
gm_kmean_sub <- gm_prepd_omited[3:5]
# calculating the Optimal number of clusters
set.seed(123)
fviz_nbclust(gm_kmean_sub, kmeans, method = "silhouette")
# creating the cluster
k_cluster <- kmeans(gm_kmean_sub, centers = 2, nstart = 25)
print(k_cluster)
# adding cluster back to the dataset
gm_kmean_final <- gm_prepd_omited %>% mutate(Cluster = k_cluster$cluster)
view(gm_kmean_final)
view(gm_prepd_omited)
gm_kmean_final$Country <- as.character(gm_kmean_final$Country)
str(gm_kmean_final)
# adding cluster back to the dataset
gm_kmean_final <- gm_prepd_omited %>% mutate(Cluster = k_cluster$cluster)
gm_kmean_final$Country <- as.character(gm_kmean_final$Country)
gm_kmean_final %>%
as_tibble() %>%
ggplot(aes(life, income, color = factor(cluster), label = Country)) +
geom_text()
view(gm_kmean_final)
gm_kmean_final %>%
as_tibble() %>%
ggplot(aes(life, income, color = factor(Cluster), label = Country)) +
geom_text()
gm_kmean_final %>%
as_tibble() %>%
ggplot(aes(income, life, color = factor(Cluster), label = Country)) +
geom_text()
gm_prepd <- gm_nona
# filtering year 2015
gm_prepd_omited <- gm_prepd[gm_prepd$Year==2015,]
# Omiting NA and Scaling
gm_prepd_omited <- na.omit(gm_prepd_omited)
gm_prepd_scaled <- gm_prepd_omited
gm_prepd_scaled[3:5] <- scale(gm_prepd_omited[3:5])
# creating a subset with numeric values only
gm_kmean_sub <- gm_prepd_omited[3:5]
# calculating the Optimal number of clusters
set.seed(123)
fviz_nbclust(gm_kmean_sub, kmeans, method = "silhouette")
# creating the cluster
k_cluster <- kmeans(gm_kmean_sub, centers = 2, nstart = 25)
# adding cluster back to the dataset
gm_kmean_final <- gm_prepd_omited %>% mutate(Cluster = k_cluster$cluster)
gm_kmean_final$Country <- as.character(gm_kmean_final$Country)
gm_kmean_final %>%
as_tibble() %>%
ggplot(aes(income, life, color = factor(Cluster), label = Country)) +
geom_text()
view(gm_kmean_final)
# filtering year 2015
gm_prepd_omited <- gm_prepd[gm_prepd$Year==2015,]
# Omiting NA and Scaling
gm_prepd_omited <- na.omit(gm_prepd_omited)
gm_prepd_scaled <- gm_prepd_omited
gm_prepd_scaled[3:5] <- scale(gm_prepd_omited[3:5])
# creating a subset with numeric values only
gm_kmean_sub <- gm_prepd_omited[3:5]
# calculating the Optimal number of clusters
set.seed(123)
fviz_nbclust(gm_kmean_sub, kmeans, method = "silhouette")
# creating the cluster
k_cluster <- kmeans(gm_kmean_sub, centers = 2, nstart = 25)
# adding cluster back to the dataset
gm_kmean_final <- gm_prepd_omited %>% mutate(Cluster = k_cluster$cluster)
gm_kmean_final$Country <- as.character(gm_kmean_final$Country)
gm_kmean_final %>%
as_tibble() %>%
ggplot(aes(income, life, color = factor(Cluster), label = Country)) +
geom_text()
gm_prepd <- gm_nona
gm_prepd$population <- log(gm_prepd$population)
gm_prepd$income <- log(gm_prepd$income)
# filtering year 2015
gm_prepd_omited <- gm_prepd[gm_prepd$Year==2015,]
# Omiting NA and Scaling
gm_prepd_omited <- na.omit(gm_prepd_omited)
gm_prepd_scaled <- gm_prepd_omited
gm_prepd_scaled[3:5] <- scale(gm_prepd_omited[3:5])
# creating a subset with numeric values only
gm_kmean_sub <- gm_prepd_omited[3:5]
# calculating the Optimal number of clusters
set.seed(123)
fviz_nbclust(gm_kmean_sub, kmeans, method = "silhouette")
# creating the cluster
k_cluster <- kmeans(gm_kmean_sub, centers = 2, nstart = 25)
# adding cluster back to the dataset
gm_kmean_final <- gm_prepd_omited %>% mutate(Cluster = k_cluster$cluster)
gm_kmean_final$Country <- as.character(gm_kmean_final$Country)
gm_kmean_final %>%
as_tibble() %>%
ggplot(aes(income, life, color = factor(Cluster), label = Country)) +
geom_text()
gm_kmean_final$Cluster <- factor(gm_kmean_final$Cluster)
gm_kmean_final %>%
as_tibble() %>%
ggplot(aes(income, life, color = Cluster, label = Country)) +
geom_text()
gm_kmean_final %>%
as_tibble() %>%
ggplot(aes(income, life, color = Cluster, label = Country)) +
geom_text()+
ggtitle("Plot of length \n by dose")
gm_kmean_final %>%
as_tibble() %>%
ggplot(aes(income, life, color = Cluster, label = Country)) +
geom_text()+
ggtitle("Life v/s Income - Who is Doing better")
gm_prepd <- gm_nona
gm_prepd$population <- log(gm_prepd$population)
gm_prepd$life <- log(gm_prepd$life)
gm_prepd$income <- log(gm_prepd$income)
# filtering year 2015
gm_prepd_omited <- gm_prepd[gm_prepd$Year==2015,]
# Omiting NA and Scaling
gm_prepd_omited <- na.omit(gm_prepd_omited)
gm_prepd_scaled <- gm_prepd_omited
gm_prepd_scaled[3:5] <- scale(gm_prepd_omited[3:5])
# creating a subset with numeric values only
gm_kmean_sub <- gm_prepd_omited[3:5]
# calculating the Optimal number of clusters
set.seed(123)
fviz_nbclust(gm_kmean_sub, kmeans, method = "silhouette")
# creating the cluster
k_cluster <- kmeans(gm_kmean_sub, centers = 2, nstart = 25)
# adding cluster back to the dataset
gm_kmean_final <- gm_prepd_omited %>% mutate(Cluster = k_cluster$cluster)
gm_kmean_final$Country <- as.character(gm_kmean_final$Country)
gm_kmean_final$Cluster <- factor(gm_kmean_final$Cluster)
gm_kmean_final %>%
as_tibble() %>%
ggplot(aes(income, life, color = Cluster, label = Country)) +
geom_text()+
ggtitle("Life v/s Income - Who is Doing better")
gm_prepd <- gm_nona
gm_prepd$population <- log(gm_prepd$population)
gm_prepd$income <- log(gm_prepd$income)
# filtering year 2015
gm_prepd_omited <- gm_prepd[gm_prepd$Year==2015,]
# Omiting NA and Scaling
gm_prepd_omited <- na.omit(gm_prepd_omited)
gm_prepd_scaled <- gm_prepd_omited
gm_prepd_scaled[3:5] <- scale(gm_prepd_omited[3:5])
# creating a subset with numeric values only
gm_kmean_sub <- gm_prepd_omited[3:5]
# calculating the Optimal number of clusters
set.seed(123)
fviz_nbclust(gm_kmean_sub, kmeans, method = "silhouette")
# creating the cluster
k_cluster <- kmeans(gm_kmean_sub, centers = 2, nstart = 25)
# adding cluster back to the dataset
gm_kmean_final <- gm_prepd_omited %>% mutate(Cluster = k_cluster$cluster)
gm_kmean_final$Country <- as.character(gm_kmean_final$Country)
gm_kmean_final$Cluster <- factor(gm_kmean_final$Cluster)
gm_kmean_final %>%
as_tibble() %>%
ggplot(aes(income, life, color = Cluster, label = Country)) +
geom_text()+
ggtitle("Life v/s Income - Who is Doing better")
ggplot(gm_nona, aes(x = region, y = life))  + geom_boxplot(outlier.colour = "red") +
geom_jitter(position = position_jitter(width = 0.1, height = 0), alpha = 1/4) + labs(title="Population Trending Over Region", x="Region", y="life")
library(dendextend)
# filtering year 2015
gm_prepd_omited <- gm_prepd[gm_prepd$Year==2015,]
# Omiting NA and Scaling
gm_prepd_omited <- na.omit(gm_prepd_omited)
gm_prepd_scaled <- gm_prepd_omited
gm_prepd_scaled[3:5] <- scale(gm_prepd_omited[3:5])
# creating a subset with numeric values only
gm_clus_sub <- gm_prepd_omited[3:5]
# calculating the Optimal number of clusters
set.seed(123)
fviz_nbclust(gm_clus_sub, kmeans, method = "silhouette")
# creating the cluster
k_cluster <- kmeans(gm_clus_sub, centers = 2, nstart = 25)
# adding cluster back to the dataset
gm_kmean_final <- gm_prepd_omited %>% mutate(Cluster = k_cluster$cluster)
gm_kmean_final$Country <- as.character(gm_kmean_final$Country)
gm_kmean_final$Cluster <- factor(gm_kmean_final$Cluster)
gm_kmean_final %>%
as_tibble() %>%
ggplot(aes(income, life, color = Cluster, label = Country)) +
geom_text()+
ggtitle("Life v/s Income - Who is Doing better")
# Dissimilarity matrix
ed <- dist(gm_clus_sub, method = "euclidean")
# Hierarchical clustering using Complete Linkage
hc1 <- hclust(ed, method = "complete" )
# Plot the obtained dendrogram
plot(hc1, cex = 0.6, hang = -1)
# Cut tree into 4 groups
sub_grp <- cutree(hc1, k = 2)
# adding back to data
gm_hc_final <- gm_prepd_omited %>%  mutate(cluster = sub_grp)
# we areadly have the input data prepared
# Dissimilarity matrix
ed <- dist(gm_clus_sub, method = "euclidean")
# Hierarchical clustering using Complete Linkage
hc1 <- hclust(ed, method = "complete" )
# Cut tree into 4 groups
sub_grp <- cutree(hc1, k = 2)
# adding back to data
gm_hc_final <- gm_prepd_omited %>%  mutate(cluster = sub_grp)
gm_hc_final %>%
as_tibble() %>%
ggplot(aes(income, life, color = Cluster, label = Country)) +
geom_text()+
ggtitle("Life v/s Income - Who is Doing better")
# we areadly have the input data prepared
# Dissimilarity matrix
ed <- dist(gm_clus_sub, method = "euclidean")
# Hierarchical clustering using Complete Linkage
hc1 <- hclust(ed, method = "complete" )
# Cut tree into 4 groups
sub_grp <- cutree(hc1, k = 2)
# adding back to data
gm_hc_final <- gm_prepd_omited %>%  mutate(Cluster = sub_grp)
gm_hc_final %>%
as_tibble() %>%
ggplot(aes(income, life, color = Cluster, label = Country)) +
geom_text()+
ggtitle("Life v/s Income - Who is Doing better")
gm_kmean_final %>%
as_tibble() %>%
ggplot(aes(income, life, color = Cluster, label = Country)) +
geom_text()+
ggtitle("Life v/s Income - Kmeans Cluster")
gm_hc_final %>%
as_tibble() %>%
ggplot(aes(income, life, color = Cluster, label = Country)) +
geom_text()+
ggtitle("Life v/s Income - Hierarchical Cluster")
# we areadly have the input data prepared
# Dissimilarity matrix
ed <- dist(gm_clus_sub, method = "euclidean")
# Hierarchical clustering using Complete Linkage
hc1 <- hclust(ed, method = "complete" )
# Cut tree into 4 groups
sub_grp <- cutree(hc1, k = 2)
# adding back to data
gm_hc_final <- gm_prepd_omited %>%  mutate(Cluster = sub_grp)
gm_hc_final$Cluster <- factor(gm_hc_final$Cluster)
gm_hc_final %>%
as_tibble() %>%
ggplot(aes(income, life, color = Cluster, label = Country)) +
geom_text()+
ggtitle("Life v/s Income - Hierarchical Cluster")
1. At the same income level, does increase in average life expectancy vary based on region?
gm_nona %>% group_by(regions) %>% summarise(average_life = mean(life))
1. At the same income level, does increase in average life expectancy vary based on region?
gm_nona %>% group_by(region) %>% summarise(average_life = mean(life))
gm_nona %>% group_by(region,Year) %>% summarise(average_life = mean(life))
1. At the same income level, does increase in average life expectancy vary based on region?
region_life_year <- gm_nona %>% group_by(region,Year) %>% summarise(average_life = mean(life))
view(region_life_year)
region_life_year %>%
as_tibble() %>%
ggplot(aes(income, life, color = region)) +
geom_text()+
ggtitle("Life v/s Income - Kmeans Cluster")+
geom_line()+
region_life_year %>%
as_tibble() %>%
ggplot(aes(income, life, color = region)) +
geom_text()+
ggtitle("Life v/s Income - Kmeans Cluster")+
geom_line()
region_life_year %>%
as_tibble() %>%
ggplot(aes(income, life, color = region,label = region)) +
geom_text()+
ggtitle("Life v/s Income - Kmeans Cluster")+
geom_line()
region_life_year %>%
as_tibble() %>%
ggplot(aes(Year, life, color = region,label = region)) +
geom_text()+
ggtitle("Life v/s Income - Kmeans Cluster")+
geom_line()
region_life_year %>%
as_tibble() %>%
ggplot(aes(Year, average_life, color = region,label = region)) +
geom_text()+
ggtitle("Life v/s Income - Kmeans Cluster")+
geom_line()
region_life_year[region_life_year$Year%%10 == 0] %>%
as_tibble() %>%
ggplot(aes(Year, average_life, color = region,label = region)) +
geom_text()+
ggtitle("Life v/s Income - Kmeans Cluster")+
geom_line()
region_life_year[region_life_year$Year%%10 == 0,] %>%
as_tibble() %>%
ggplot(aes(Year, average_life, color = region,label = region)) +
geom_text()+
ggtitle("Life v/s Income - Kmeans Cluster")+
geom_line()
region_life_year[region_life_year$Year%%10 == 0,] %>%
as_tibble() %>%
ggplot(aes(Year, average_life, color = region,label = region)) +
ggtitle("Life v/s Income - Kmeans Cluster")+
geom_line()
plot(life,income,data=gm_nona)
plot(gm_nona$life,gm_nona$income,data=gm_nona)
+   main = "Eruptions of Old Faithful",
plot(gm_nona$life,gm_nona$income,data=gm_nona),
plot(gm_nona$life,gm_nona$income,data=gm_nona,
+   main = "Eruptions of Old Faithful",
plot(gm_nona$life,gm_nona$income,data=gm_nona,main = "Life v/s income",xlab = "Income",ylab = "Life")
plot(gm_nona$life,gm_nona$income,data=gm_nona,main = "Life v/s income",xlab = "Life",ylab = "Income")
plot(gm_nona$income,gm_nona$life,data=gm_nona,main = "Life v/s income",xlab = "Income",ylab = "Life")
region_life_year[region_life_year$Year%%10 == 0,] %>%
as_tibble() %>%
ggplot(aes(Year, average_life, color = region,label = region)) +
ggtitle("Life Longeivity Over The Years")+
geom_line()
plot(gm_nona$income,gm_nona$life,data=gm_nona,main = "Life v/s income",xlab = "Income",ylab = "Life")
max(gm_raw$Year) - min(gm_raw$Year
max(gm_raw$Year) - min(gm_raw$Year)
install.packages("latexpdf")
install.packages('tinytex')
gm_hc_final %>%
as_tibble() %>%
ggplot(aes(income, life, color = Cluster, label = Country)) +
geom_text()+
ggtitle("Life v/s Income - Hierarchical Cluster")
warnings()
warnings()
